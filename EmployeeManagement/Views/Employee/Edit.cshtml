@model EntityLayer.Employee


@{
    ViewBag.Title = "Edit";
}

<h2>Edit Employee Deails</h2>

@using(Html.BeginForm("Edit", "Employee", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
            @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Employee</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Row_Id, htmlAttributes: new { @class = "control-label col-md-2", style = "display:none;" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.Row_Id, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @disabled = "disabled" } })*@
                    @Html.EditorFor(model => model.Row_Id,  new { htmlAttributes = new { @class = "form-control", style = "display:none;" } })

                    @Html.ValidationMessageFor(model => model.Row_Id, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>
          
            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PanNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PanNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PanNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PassportNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PassportNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PassportNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.DisplayFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateOfJoinee, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.DisplayFor(model => model.DateOfJoinee, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.EditorFor(model => model.DateOfJoinee, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DateOfJoinee, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Country.CountryName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @if (ViewBag.CountryList != null)
                    {
                        @Html.DropDownListFor(model => model.CountryId, ViewBag.countryList as SelectList, "--- Select Country ---", new { @class = "form-control" })
                    }

                    @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
                    <div onclick="LoderCall()" id="ajaxCall" style="display:none;">  </div>
                </div>


             
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.State.StateName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @if (ViewBag.CountryList != null)
                    {
                        @Html.DropDownListFor(model => model.StateId, ViewBag.stateList as SelectList, "--- Select state ---", new { @class = "form-control" })
                    }

                    @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })

                    <div onclick="LoderCall()" id="ajaxCall" style="display:none;">  </div>
                </div>

              
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.City.CityName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @if (ViewBag.CountryList != null)
                    {
                        @Html.DropDownListFor(model => model.CityId, ViewBag.cityList as SelectList, "--- Select city ---", new { @class = "form-control" })
                    }

                    @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })

                    <div onclick="LoderCall()" id="ajaxCall" style="display:none;">  </div>
                </div>

            

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ProfileImage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @*@if (ViewBag.personalImagePath != null)
                    {
                        <img src="@Url.Content(Model.ProfileImage)" width="120" height="140" />
                    }
                    else
                    {
                        //This Image show, when "PortalContext.CurrentUser.ImageUrl" image not view
                        < img src="~/Content/loading-loading-forever.gif" alt="Picture" style="width: 160px; height: 160px;" />
                    }*@
                    @*<img src="~/Content/loading-loading-forever.gif" />*@



                    <img src="@Url.Content(Model.ProfileImage)" width="120" height="140" />
                    <input type="file" name="ImageFile" id="ImageFile" class="btn btn-primary" />
                    @Html.ValidationMessageFor(model => model.ProfileImage, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    Male
                    @Html.RadioButtonFor(model => model.Gender, "Male")
                    Female
                    @Html.RadioButtonFor(model => model.Gender, "Female")
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsActive)
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-success" />
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-warning" })
                </div>
            </div>
        </div>
}



<script>

    function LoderCall() {
        debugger;
        $.ajax({
            type: "GET",
            url: "/Employee/CallingAjaxFunction",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (recData) {
                //debugger;
                //alert('Success');
            },
            error: function () { alert('A error'); }
        });
    }




    $(document).ready(function () {
        

        $("#CountryId").change(function () {
            LoderCall();
                var cId = $(this).val();
               debugger;

                $.ajax({
                    type: "post",
                    url: "/Employee/StateList?CountryId=" + cId,
                    contentType: "html",
                    success: function (response) {
                        debugger;
                        
                        $("#StateId").empty();
                        $("#CityId").empty();
                        $("#CityId").append('<option value=""> ---Select City--- </option>')
                        $("#StateId").append(response);
                    },

                });
            });


        $("#StateId").change(function () {
            debugger;
            LoderCall();
                var sId = $(this).val();
                

                $.ajax({
                    type: "post",
                    url: "/Employee/CityList?StateId=" + sId,
                    contentType: "html",
                    success: function (response) {
                        debugger;
                       
                        $("#CityId").empty();
                        $("#CityId").append(response);
                    },

                })
        });


        $("#StateId").change(function () {
            debugger;
            LoderCall();
            var sId = $(this).val();


            $.ajax({
                type: "post",
                url: "/Employee/CityList?StateId=" + sId,
                contentType: "html",
                success: function (response) {
                    debugger;

                    $("#CityId").empty();
                    $("#CityId").append(response);
                },

            })
        });


        $("#ImageFile").change(function () {
            debugger;
            if (this.files[0].size > 2000000) {
                alert("Please upload file less than 2MB. Thanks!!");
                $(this).val('');
            }
        });
      
    });

   

        $('#PanNumber, #PassportNumber').keyup(function () {
            $(this).val($(this).val().toUpperCase());
        });
</script>
